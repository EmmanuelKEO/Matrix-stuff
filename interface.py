from Matrix import Matrix
data:list = [
	[2,3,5,3],
	[3,4,2,5],
	[3,8,3,4]
]
data2:list = [
	[5,3,5],
	[8,4,6],
	[9,8,3]
]
data3:list = [
	[5,3,5,3],
	[8,4,6,8],
	[9,8,3,2],
	[4,6,4,9]
]
data4:list = [
	[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
	[2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],
	[3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3],
	[4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5],
	[5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6],
	[6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8],
	[7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10],
	[8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13],
	[9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16],
	[10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,22],
	[11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,26],
	[12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35],
	[13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,42],
	[14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48],
	[15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,57],
	[16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,69],
	[17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,78],
	[18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,86],
	[19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,92],
]
data5 = [
	[7, 10, 14, 6300],
	[3, 5, 18, 3600],
	[6, 4, 3, 4248]
]
def main() -> None:
	DataMatrix:Matrix = Matrix(data4)
	print(DataMatrix)
	print(solve(DataMatrix))
	

def solve(matrix:Matrix):
	De:Matrix = matrix.duplicate()
	E:list = De.get_column(De.x - 1)
	De.remove_column(De.x - 1)
	#print('D:\n' + str(De))
	d = De.duplicate().determinant()
	return d
	if not d:
		return 'Unsolvable!'
	Di:list = []
	#print('E:' + str(E))
	for x in range(De.x):
		temp:Matrix = De.duplicate()
		temp.set_column(x, E)
		#print('D' + str(x) + ':\n' + str(temp))
		di:float = temp.determinant()
		Di.append(di / d)
	return Di
		
if __name__ == '__main__':
    main()
